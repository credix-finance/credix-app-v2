name: CD-devnet

on:
  schedule:
    # run every day at noon
    - cron: '0 12 * * *'
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should-run: ${{ steps.should-run.outputs.should-run }}
    steps:
      - uses: actions/checkout@v2
      - name: print latest_commit
        run: echo ${{ github.sha }}

      - id: should-run
        name: check latest commit is less than a day
        run: |
          if test -z "$(git rev-list --after="24 hours" ${{ github.sha }})" ; then
            echo "::set-output name=should-run::false"
          fi

  cd-devnet:
    runs-on: ubuntu-latest
    needs: check
    if: ${{ needs.check.outputs.should-run != 'false' }}
    environment:
      name: devnet
      url: https://app-v2.dev.credix.finance
    steps:
      - uses: actions/checkout@v2
        with:
          ref: devnet

      # Install
      - name: Use Node.js 14.17
        uses: actions/setup-node@v1
        with:
          node-version: 14.17
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Yarn Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-
      - name: Run yarn install
        run: yarn install

      - name: Set GitHub Actions as commit author
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com

      # Critical
      - name: Run Trivy for critical vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs' # Filesystem mode
          ignore-unfixed: true # Ignore vulnerabilities with no available fix
          format: 'table' # Table output mode as next step will report in security tab
          severity: 'CRITICAL' # Error only on critical vulnerabilities
          exit-code: '0' # Don't fail the job if a critical vulnerability with fix available is found

      # Build app
      - uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Build app
        run: |
          NEXT_PUBLIC_REACT_APP_CLUSTER=devnet NEXT_PUBLIC_GOOGLE_ANALYTICS=${{ secrets.NEXT_PUBLIC_GOOGLE_ANALYTICS }} yarn build
          yarn export

      - name: Checkout target repository
        uses: actions/checkout@v2
        with:
          repository: credix-finance/credix-app-v2-devnet
          path: "deploy"
          token: ${{ secrets.PAT }}

      # Push app
      - name: Push files to target repository
        run: |
          cp -r out/* deploy
          cd deploy
          echo ${{ secrets.DEPLOY_URL }} > CNAME
          touch .nojekyll
          git add .
          git commit -m $GITHUB_SHA --allow-empty
          git push

      # Build storybook
      - uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Build storybook
        run: |
          yarn build-storybook

      - name: Checkout target repository
        uses: actions/checkout@v2
        with:
          repository: credix-finance/credix-app-v2-devnet-storybook
          path: 'deploy'
          token: ${{ secrets.PAT }}

      # Push storybook
      - name: Push files to target repository
        run: |
          cp -r storybook-static/* deploy
          cd deploy
          git add .
          git commit -m $GITHUB_SHA --allow-empty
          git push
