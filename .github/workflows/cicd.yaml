name: CICD

on:
  push:
    branches:
      - localnet
      - devnet
      - mainnet
  pull_request:

jobs:
  analyze:
    runs-on: ubuntu-latest
    if: (github.actor != 'dependabot[bot]')
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v2

      - name: Initialise CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: javascript

      # Analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  scan:
    runs-on: ubuntu-latest
    if: (github.actor != 'dependabot[bot]')
    steps:
      - uses: actions/checkout@v2

      # Critical
      - name: Run Trivy for critical vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs' # Filesystem mode
          ignore-unfixed: true # Ignore vulnerabilities with no available fix
          format: 'table' # Table output mode as next step will report in security tab
          severity: 'CRITICAL' # Error only on critical vulnerabilities
          exit-code: '1' # Fail the job if a critical vulnerability with fix available is found

      # Scanning
      - name: Run Trivy for reporting all vulnerabilities
        uses: aquasecurity/trivy-action@master
        if: always()
        with:
          scan-type: 'fs' # Filesystem mode
          ignore-unfixed: true # Ignore vulnerabilities with no available fix
          format: 'template' # Template output mode
          template: '@/contrib/sarif.tpl' # SARIF template to be compatible with GitHub security tab
          output: 'trivy-results.sarif' # Output file name
          severity: 'CRITICAL,HIGH,MEDIUM' # Report on critical/high/medium vulnerabiliies
          exit-code: '0' # No failing as for reporting purposes

      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v1
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Install
      - name: Use Node.js 14.17
        uses: actions/setup-node@v1
        with:
          node-version: 14.17
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Run yarn install
        run: yarn install

      # Linting
      - name: Run linter
        run: yarn run lint

      # Testing
      - name: Run unit tests
        run: yarn run test:unit

  cd-devnet:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/devnet'
    needs: [ci]
    environment:
      name: devnet
      url: https://app-v2.dev.credix.finance
    steps:
      - uses: actions/checkout@v2

      # Install
      - name: Use Node.js 14.17
        uses: actions/setup-node@v1
        with:
          node-version: 14.17
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Yarn Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-
      - name: Run yarn install
        run: yarn install

      # Build
      - uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Build app
        run: |
          NEXT_PUBLIC_BASE_PATH= yarn build
          yarn export

      - name: Checkout target repository
        uses: actions/checkout@v2
        with:
          repository: credix-finance/credix-app-v2-devnet
          path: 'deploy'
          token: ${{ secrets.PAT }}

      - name: Set GitHub Actions as commit author
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com

      # Push
      - name: Push files to target repository
        run: |
          cp -r out/* deploy
          cd deploy
          echo ${{ secrets.DEPLOY_URL }} > CNAME
          touch .nojekyll
          git add .
          git commit -m $GITHUB_SHA
          git push

  cd-mainnet:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/mainnet'
    needs: [ci]
    environment:
      name: mainnet
      url: https://app-v2.credix.finance
    steps:
      - uses: actions/checkout@v2

      # Install
      - name: Use Node.js 14.17
        uses: actions/setup-node@v1
        with:
          node-version: 14.17
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Yarn Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-
      - name: Run yarn install
        run: yarn install

      # Build
      - uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Build app
        run: |
          NEXT_PUBLIC_BASE_PATH= yarn build
          yarn export

      - name: Checkout target repository
        uses: actions/checkout@v2
        with:
          repository: credix-finance/credix-app-v2-mainnet
          path: 'deploy'
          token: ${{ secrets.PAT }}

      - name: Set GitHub Actions as commit author
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com

      # Push
      - name: Push files to target repository
        run: |
          cp -r out/* deploy
          cd deploy
          echo ${{ secrets.DEPLOY_URL }} > CNAME
          touch .nojekyll
          git add .
          git commit -m $GITHUB_SHA
          git push
