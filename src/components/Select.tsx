import React, { FunctionComponent } from "react";
import { SelectProps as AntSelectProps } from "antd/lib/select";
import { Select as AntSelect } from "antd";
import { FormItem } from "@components/FormItem";
import { FormItemProps } from "antd/lib/form";
import { Icon, IconDimension } from "./Icon";

const { Option } = AntSelect;

interface SelectProps {
	placeholder?: AntSelectProps["placeholder"];
	value?: AntSelectProps["value"];
	label: string;
	/**
	 * Controls whether the input can be interacted with or not.
	 * This differs from setting `disabled` to `true` in that by
	 * setting this option to true will remove any styling from the
	 * input that makes it look like an input.
	 */
	isDisplay?: boolean;
	/**
	 * Specifies whether the input has validation feedback
	 */
	hasFeedback?: FormItemProps["hasFeedback"];
	/**
	 * The prompt message. If not provided, the prompt message will be generated by the validation rule.
	 */
	help?: FormItemProps["help"];
	/**
	 * The result of the validation rules
	 */
	validateStatus?: "error" | "";
	disabled?: boolean;
	required?: boolean;
	/**
	 * Optional description to provide more information about the input
	 */
	description?: string;
	/**
	 * Form item name
	 */
	name?: FormItemProps["name"];
	options?: AntSelectProps["options"];
}

export const Select: FunctionComponent<SelectProps> = ({
	placeholder,
	label,
	isDisplay,
	value,
	hasFeedback,
	validateStatus,
	disabled,
	description,
	name,
	help,
	options,
}) => {
	return (
		<FormItem
			isDisplay={isDisplay}
			label={label}
			value={value}
			hasFeedback={hasFeedback}
			validateStatus={validateStatus}
			disabled={disabled}
			description={description}
			name={name}
			help={help}
		>
			<AntSelect
				suffixIcon={
					<Icon
						className={disabled ? "text-darker/40" : "text-darker"}
						name="arrow-down"
						size={IconDimension.MIDDLE}
					/>
				}
				disabled={disabled}
				placeholder={placeholder}
			>
				{options.map((option) => (
					<Option key={option.label.toString()} value={option.value}>
						{option.label}
					</Option>
				))}
			</AntSelect>
		</FormItem>
	);
};
